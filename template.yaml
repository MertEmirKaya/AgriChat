AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  agri_chat

Globals:
  Function:
    Timeout: 20
    Runtime: python3.9
    CodeUri: agri_chat/
    MemorySize: 256
    Architectures:
      - x86_64
    Layers:
      - !Ref DependenciesLayer

Resources:
  BackendApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: "'*'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"
      GatewayResponses:
        DEFAULT_4XX:
          ResponseParameters:
            Headers:
              Access-Control-Allow-Headers: "'*'"
              Access-Control-Allow-Origin: "'*'"
              Access-Control-Allow-Methods: "'*'"
  MyDynamoDBTable:
    Type: 'AWS::DynamoDB::Table'
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      TableName: Users
      AttributeDefinitions:
        - AttributeName: email
          AttributeType: S
      KeySchema:
        - AttributeName: email
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  DependenciesLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: agri-chat-dependencies
      Description: Dependencies for agri_chat
      ContentUri: dependencies/
      CompatibleRuntimes:
        - python3.9
      RetentionPolicy: Delete
    Metadata:
      BuildMethod: python3.9
      BuildArchitecture: x86_64
  ChatGPTFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: chat-gpt-function
      Handler: handlers/chat_gpt.chat_gpt
      Events:
        Root:
          Type: Api
          Properties:
            RestApiId: !Ref BackendApi
            Path: /chat_gpt
            Method: get
  RegisterFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: register-function
      Handler: handlers/authentication.register
      Events:
        Root:
          Type: Api
          Properties:
            RestApiId: !Ref BackendApi
            Path: /register
            Method: post
    Connectors:
      MyConn:
        Properties:
          Destination:
            Id: MyDynamoDBTable
          Permissions:
            - Write
  LoginFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: login-function
      Handler: handlers/authentication.login
      Events:
        Root:
          Type: Api
          Properties:
            RestApiId: !Ref BackendApi
            Path: /login
            Method: post
    Connectors:
      MyConn:
        Properties:
          Destination:
            Id: MyDynamoDBTable
          Permissions:
            - Write
            - Read